#include <glad/glad.h>
#include <GLFW/glfw3.h>

#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

#include <iostream>

using namespace std;

void framebuffer_size_callback(GLFWwindow* window, int width, int height);
void processInput(GLFWwindow* window);

// settings
const unsigned int SCR_WIDTH = 800;
const unsigned int SCR_HEIGHT = 600;
float rotateAngle = 0.0;
float translate_X = -0.7;
float translate_Y = -0.5;
float scale_X = 1.5;
float scale_Y = 1.5;

const char* vertexShaderSource = "#version 330 core\n"
"layout (location = 0) in vec3 aPos;\n"
"uniform mat4 transform;\n"
"void main()\n"
"{\n"
"   gl_Position = transform * vec4(aPos, 1.0);\n"
"}\0";
const char* fragmentShaderSource = "#version 330 core\n"
"out vec4 FragColor;\n"
"uniform vec4 colorInfo;\n"
"void main()\n"
"{\n"
"   FragColor = colorInfo;\n"
"}\n\0";
const char* fragmentShaderSource1 = "#version 330 core\n"
"out vec4 FragColor;\n"
"void main()\n"
"{\n"
"   FragColor = vec4(0.33f, 0.19f, 0.09f, 1.0f);\n"
"}\n\0";

int main()
{
    // glfw: initialize and configure
    // ------------------------------
    glfwInit();
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);

#ifdef __APPLE__
    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
#endif

    // glfw window creation
    // --------------------
    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, "CSE 4208: Computer Graphics Laboratory", NULL, NULL);
    if (window == NULL)
    {
        std::cout << "Failed to create GLFW window" << std::endl;
        glfwTerminate();
        return -1;
    }
    glfwMakeContextCurrent(window);
    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);

    // glad: load all OpenGL function pointers
    // ---------------------------------------
    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
    {
        std::cout << "Failed to initialize GLAD" << std::endl;
        return -1;
    }


    // build and compile our shader program
    // ------------------------------------
    // vertex shader
    unsigned int vertexShader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader);
    // check for shader compile errors
    int success;
    char infoLog[512];
    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);
    glCompileShader(fragmentShader);
    // check for shader compile errors
    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // link shaders
    unsigned int shaderProgram = glCreateProgram();
    glAttachShader(shaderProgram, vertexShader);
    glAttachShader(shaderProgram, fragmentShader);
    glLinkProgram(shaderProgram);
    // check for linking errors
    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    glDeleteShader(vertexShader);
    glDeleteShader(fragmentShader);

    //asdasd
    unsigned int vertexShader1 = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader1, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader1);
    // check for shader compile errors
    glGetShaderiv(vertexShader1, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader1 = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader1, 1, &fragmentShaderSource1, NULL);
    glCompileShader(fragmentShader1);
    // check for shader compile errors
    glGetShaderiv(fragmentShader1, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // link shaders
    unsigned int shaderProgram1 = glCreateProgram();
    glAttachShader(shaderProgram1, vertexShader1);
    glAttachShader(shaderProgram1, fragmentShader1);
    glLinkProgram(shaderProgram1);
    // check for linking errors
    glGetProgramiv(shaderProgram1, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    glDeleteShader(vertexShader1);
    glDeleteShader(fragmentShader1);

    // set up vertex data (and buffer(s)) and configure vertex attributes
    // ------------------------------------------------------------------

    //lines, line_strip, line_loop, triangles, triangle_strip
    /*float vertices[] = {
        -0.75f, 0.5f, 0.0f,
        -0.5f, -0.5f, 0.0f,
        -0.25f, 0.5f, 0.0f,
         0.0f, -0.5f, 0.0f,
         0.25f, 0.5f, 0.0f,
         0.5f, -0.5f, 0.0f
    };*/

    //triangle_fan
    /*float vertices[] = {
        0.0f, 0.0f, 0.0f,
        0.5f, 0.0f, 0.0f,
        0.33f, 0.33f, 0.0f,
         0.0f, 0.5f, 0.0f,
        -0.33f, 0.33f, 0.0f,
        -0.5f, 0.0f, 0.0f
        //-0.33f, -0.33f, 0.0f,
        //0.0f, -0.5f, 0.0f,
       // 0.33f, -0.33f, 0.0f
    };*/

    //triangle
    float vertices2[] = {
        -0.5f, -0.5f, 0.0f, // left
         0.5f, -0.5f, 0.0f, // right
         0.0f,  0.5f, 0.0f  // top
    };
    float vertices[] = { 0.104191338812285,0.0501377672774447,0,
0.0995792593297904,0.0496319263019453,0,
0.0940417884156465,0.0522503972339425,0,
0.0820474062260097,0.0541606908002404,0,
0.0737456631575188,0.0532501770443414,0,
0.0599004981045841,0.0614090944256324,0,
0.0525152198622922,0.0670507090700263,0,
0.0405208376726554,0.0689610026363242,0,
0.0312907276373655,0.0744002808905183,0,
0.0220546665317757,0.086290519349905,0,
0.0146574861488838,0.104834054404684,0,
0.0118664341781869,0.130334390640156,0,
0.00998887149853901,0.165612335378517,0,
0.00903372471539006,0.200991448311978,0,
0.0089950427584401,0.242922689645732,0,
0.00895636080149015,0.284853930979486,0,
0.00983116813558918,0.336562780816129,0,
0.00979843724893922,0.37204306194469,0,
0.0143777858447841,0.408029184048751,0,
0.0198825258722781,0.440890994245315,0,
0.025393216970072,0.467301844236685,0,
0.0355159875503609,0.494218535203556,0,
0.0530061831620417,0.534846492141611,0,
0.0437939263376518,0.520932889780227,0,
0.0622095133809815,0.558436534810785,0,
0.0751114337913674,0.57275480995257,0,
0.0834042502544082,0.583341764016258,0,
0.095389705838595,0.591107910757749,0,
0.106455721061432,0.595547409201544,0,
0.119357641471818,0.609865684343329,0,
0.125811577212161,0.613799341811624,0,
0.141486696382344,0.621970161333515,0,
0.153469176431381,0.632961788177603,0,
0.170072662568362,0.634782815689401,0,
0.1811386777912,0.639222314133197,0,
0.194974916238685,0.640739837059695,0,
0.20880222808072,0.651933800293983,0,
0.223560882424704,0.653552491415581,0,
0.232782065854543,0.657789653469176,0,
0.248460160559876,0.662734992888471,0,
0.265054720091408,0.674232460708058,0,
0.279804447829942,0.685527592137446,0,
0.295476591464975,0.696923891761933,0,
0.307444193838261,0.724042919119003,0,
0.319417747281848,0.744710986270881,0,
0.328618101965638,0.771526509042651,0,
0.33598255146188,0.788463255116432,0,
0.347036664544118,0.805804673970613,0,
0.357165386194707,0.826270404732291,0,
0.370055404464493,0.853490600284461,0,
0.384787278992126,0.884138612329427,0,
0.401366960847908,0.911763480661997,0,
0.421627379684236,0.949469462082755,0,
0.437290596713819,0.970542202015032,0,
0.452959764813701,0.985163981742116,0,
0.471393205067931,1.00331474615709,0,
0.488907204960812,1.01813886227438,0,
0.504582324130995,1.02630968179627,0,
0.52671435457667,1.03518867868386,0,
0.542395424817153,1.03690853800055,0,
0.560843742747133,1.03893190190255,0,
0.582059308366609,1.04125877038985,0,
0.59958223486494,1.04640644619934,0,
0.617108136898421,1.04832864190624,0,
0.629099543552908,1.04964382844254,0,
0.64478061379339,1.05136368775924,0,
0.659548194742824,1.04330593857305,0,
0.677999488207954,1.04210382237245,0,
0.693692460589037,1.03092176127876,0,
0.711224313692817,1.02639299678047,0,
0.728762117866898,1.01541327207698,0,
0.748144753833977,1.00463588376369,0,
0.766604973904556,0.993757327255307,0,
0.780456090027791,0.979147449668823,0,
0.796146086873724,0.971190868677731,0,
0.812758499616156,0.96333545588174,0,
0.825693150913191,0.942173449894963,0,
0.836774043811779,0.930485547825776,0,
0.846926569743568,0.925147437766682,0,
0.861703077298452,0.907413248272702,0,
0.873709361628689,0.892601034296018,0,
0.889411260615221,0.871742532894541,0,
0.904178841564655,0.86368478370835,0,
0.91801805554729,0.861976826532251,0,
0.930015413272077,0.856841052863357,0,
0.945693507977409,0.861786392282652,0,
0.959529746424894,0.86330391520915,0,
0.968762831995334,0.854639156852359,0,
0.973389789153579,0.839017597314877,0,
0.983578021507168,0.794973726024625,0,
0.984521266149717,0.77249653350155,0,
0.988252587227813,0.727744484845599,0,
0.991992834911358,0.673315995881859,0,
0.994801740092955,0.628462779030808,0,
0.995774740087004,0.573730785481769,0,
0.997667180442402,0.522325440230425,0,
0.99956259633295,0.467694614876485,0,
1.00331177062194,0.403589685604956,0,
1.00336235471949,0.348756523860816,0,
1.00343079202794,0.274570481501098,0,
0.986848134637014,0.250171093271124,0,
0.970256550640633,0.235448145348941,0,
0.95458143147045,0.22727732582705,0,
0.937983896403768,0.219005338110059,0,
0.910323321649398,0.203068371846676,0,
0.896487083201914,0.201550848920178,0,
0.886343483875575,0.197212518671483,0,
0.888161535852223,0.22644417598505,0,
0.889060147467522,0.252349185000922,0,
0.889946856942221,0.291156114427179,0,
0.889911150520421,0.329861875658337,0,
0.887108196409124,0.368264132304194,0,
0.884314168903277,0.396989948642263,0,
0.877830477811434,0.425311092199932,0,
0.870421395287942,0.456756547665097,0,
0.86300636169415,0.494652963335455,0,
0.856537548278057,0.506846706380142,0,
0.844516386272071,0.537786320869808,0,
0.832507126406684,0.555824014949088,0,
0.825121848164392,0.561465629593482,0,
0.809434826853609,0.566196730481977,0,
0.789138701595482,0.567196510292376,0,
0.774385998321798,0.559126858965585,0,
0.755036093241369,0.534423966150312,0,
0.741232585680534,0.497426162095252,0,
0.731109815100246,0.470509471128382,0,
0.722840802918404,0.434118676243922,0,
0.714580717342014,0.388051441051673,0,
0.712771591970816,0.349143343430316,0,
0.708195218910121,0.309931741223659,0,
0.707299582829972,0.280801252105191,0,
0.707350166927522,0.225968090361051,0,
0.707391824419622,0.180811368924701,0,
0.710185851925468,0.152085552586632,0,
0.693582365788487,0.150264525074834,0,
0.677904271083154,0.14531918565554,0,
0.667757696221665,0.144206335509441,0,
0.649309378291685,0.142182971607443,0,
0.623484708724864,0.13612478204205,0,
0.604113974898385,0.134000249944952,0,
0.556148348280438,0.128739503799758,0,
0.541392669471604,0.123895332575563,0,
0.522944351541624,0.121871968673565,0,
0.500806370025649,0.119443931991168,0,
0.486047715681665,0.11782524086957,0,
0.47221147723418,0.116307717943072,0,
0.452840743407702,0.114183185845974,0,
0.424248826151383,0.107821491695281,0,
0.401188428738908,0.105292286817784,0,
0.378131006861584,0.0995376018376904,0,
0.356921392312407,0.0907597731452002,0,
0.332016163106934,0.0880282318775032,0,
0.310806548557758,0.0792504031850128,0,
0.284969976850336,0.0860941340300053,0,
0.586579146259454,0.141754494545844,0,
0.575510155501467,0.140540476204645,0,
0.435311865839071,0.115486470241672,0,
0.301576438522468,0.0846896814392068,0,
0.347694257812267,0.0929735712967977,0,
0.287698542582883,0.128328879949058,0,
0.29042413278028,0.173789105970708,0,
0.29037652421788,0.225396787612251,0,
0.288498961538232,0.260674732350613,0,
0.281988490630039,0.31802519683165,0,
0.27272267417295,0.362170236317001,0,
0.262537417354511,0.402988627504656,0,
0.24496688229378,0.449448633336705,0,
0.228330665270148,0.483107886953468,0,
0.212637692889066,0.494289948047156,0,
0.191419151734439,0.495188559662455,0,
0.176663472925605,0.49034438843826,0,
0.161925647327671,0.466147336598487,0,
0.156403054089277,0.452638407017502,0,
0.147199723870338,0.429048364348328,0,
0.1361575129287,0.398805025083761,0,
0.128799014502758,0.375417318804787,0,
0.124219665906913,0.339431196700726,0,
0.11778953444777,0.309693698411659,0,
0.113219112457375,0.264031135999809,0,
0.111404036015877,0.231573998583645,0,
0.110517326541178,0.192767069157387,0,
0.109618714925879,0.166862060141516,0,
0.109663347953129,0.118479858602569,0,
0.10877961401358,0.0764474490737159,0,
0.107881002398281,0.0505424400578443,0,
0.0328826389426138,0.348768426001416,0,
0.0402679171849057,0.343126811357022,0,
0.0541041556323904,0.34464433428352,0,
0.0651642197849283,0.355534792932508,0,
0.0771437242988151,0.369751899879193,0,
0.083591708968858,0.380136517552681,0,
0.0900307670334509,0.400197575533959,0,
0.0955414581312449,0.42660842552533,0,
0.101055124764188,0.449793795414105,0,
0.103801543707635,0.47267566071758,0,
0.103774763891285,0.501704981640948,0,
0.09085499027,0.506739587114742,0,
0.0788635836155132,0.505424400578444,0,
0.0668721769610264,0.504109214042145,0,
0.0594928497890345,0.503299868481346,0,
0.0484536143825467,0.469831049114183,0,
0.0401905532710058,0.42698929402453,0,
0.0374441343275588,0.404107428721055,0,
0.0347006909192618,0.378000083314984,0,
0.0438474859703517,0.46287424793349,0,
0.0539672810154906,0.493016419002957,0,
0.346224343448169,0.686360741979445,0,
0.360988948862453,0.68152847289585,0,
0.378514850895933,0.683450668602748,0,
0.393276480775067,0.68184387962175,0,
0.408032159583901,0.686688050845944,0,
0.428328284842028,0.685688271035545,0,
0.445857162410659,0.684384986639847,0,
0.467069752494986,0.689937335229741,0,
0.479061159149473,0.691252521766039,0,
0.495661669751304,0.696299029380434,0,
0.510420324095288,0.697917720502032,0,
0.519644483060278,0.698929402453031,0,
0.537170385093759,0.700851598159929,0,
0.548212596035397,0.731094937424495,0,
0.550961990513994,0.750751322625374,0,
0.55462189874849,0.783410796431738,0,
0.560111761100234,0.832400007141284,0,
0.561923862006581,0.868082624660045,0,
0.567431577569225,0.897718954754012,0,
0.569234751870123,0.943078012580562,0,
0.569202020983473,0.978558293709123,0,
0.560894326844683,0.984098740158417,0,
0.5452132566042,0.982378880841719,0,
0.532299434053214,0.980962526110321,0,
0.512928700226735,0.978837994013223,0,
0.494486333367056,0.970363669906032,0,
0.478811214196873,0.962192850384141,0,
0.47235727845653,0.958259192915846,0,
0.456702988032397,0.927510012675779,0,
0.452102810690502,0.914102251289894,0,
0.438281449918768,0.896457327850414,0,
0.423546599855984,0.869034795908044,0,
0.411578997482697,0.841915768550973,0,
0.397769538851562,0.811368924701107,0,
0.386718401304474,0.79080202574433,0,
0.37198355124169,0.76337949380196,0,
0.361854829591102,0.742913763040282,0,
0.349887227217815,0.715794735683212,0,
0.347128906133768,0.705814790790123,0,
0.344379511655171,0.686158405589245,0,
0.592280271606848,0.961734617971042,0,
0.589554681409451,0.916274391949392,0,
0.589575510155501,0.893696031231217,0,
0.588700702821402,0.841987181394573,0,
0.585960234948255,0.812654355885906,0,
0.586013794580955,0.754595714039169,0,
0.586037598862155,0.728791873218398,0,
0.596196075864244,0.717002802954111,0,
0.617417592554021,0.712878711236215,0,
0.638633158173497,0.715205579723513,0,
0.658003891999976,0.717330111820611,0,
0.676452209929956,0.719353475722608,0,
0.693055696066937,0.721174503234406,0,
0.713345870254765,0.7266256836292,0,
0.722549200473705,0.750215726298374,0,
0.722519445122205,0.782470527324339,0,
0.722477787630105,0.827627248760689,0,
0.716907585829311,0.865726000821247,0,
0.711343335098817,0.897373792676613,0,
0.706701500264822,0.929122752727078,0,
0.700217809172979,0.957443896284746,0,
0.695584900944434,0.979516416027422,0,
0.676208216047656,0.983842844135517,0,
0.671596136565161,0.983337003160018,0,
0.659604729910674,0.982021816623719,0,
0.645768491463189,0.980504293697221,0,
0.633777084808702,0.979189107160923,0,
0.619015454929569,0.980795896141921,0,
0.598722305206591,0.978570195849723,0,
0.5904205621381,0.977659682093824,0,
0.922883055517534,0.588316858787052,0,
0.933984777162172,0.55405059599969,0,
0.940465492718865,0.528954932544618,0,
0.947868624172057,0.503960437284645,0,
0.960794348863643,0.492474871605658,0,
0.975553003207627,0.494093562727256,0,
0.984771211102316,0.501556204883448,0,
0.981962305920719,0.546409421734499,0,
0.978225033772324,0.597612430595642,0,
0.975439932871927,0.616661806625921,0,
0.958833471199795,0.61806625921672,0,
0.943155376494462,0.613120919797425,0,
0.933008801632974,0.612008069651326,0,
0.922883055517534,0.588316858787052,0,
0.766661509072406,0.932473205305974,0,
0.775903521248296,0.914132006641394,0,
0.789757612906681,0.896296648952314,0,
0.804537095996715,0.875336979355737,0,
0.822095728916845,0.841778893934074,0,
0.837794652368228,0.824145872635193,0,
0.847956104905467,0.80913132226831,0,
0.865499860149848,0.791700637359629,0,
0.877497217874635,0.786564863690734,0,
0.888548355421722,0.807131762647512,0,
0.873762921261389,0.834542392449282,0,
0.857138606378357,0.855299725655659,0,
0.843290465790272,0.866684123139546,0,
0.825740759475591,0.89056576825342,0,
0.80912537119801,0.901646661152008,0,
0.797122062402923,0.913233395026095,0,
0.788808417193832,0.925224801680582,0,
0.775891619107696,0.92703392705178,0,
0.767580949433755,0.93579985360367,0,
0.158411540315525,0.275439337764897,0,
0.156596463874027,0.242982200348732,0,
0.151094699381683,0.206894910049572,0,
0.151127430268333,0.171414628921011,0,
0.151157185619833,0.139159827895047,0,
0.151189916506483,0.103679546766485,0,
0.157679558668626,0.0689074430036241,0,
0.166005106018317,0.0440141159387514,0,
0.173402286401209,0.0254705808839719,0,
0.180787564643501,0.0198289662395781,0,
0.191865482006938,0.0113665442729874,0,
0.206624136350922,0.0129852353945856,0,
0.221373864089456,0.0242803668239733,0,
0.230583145378696,0.0414194492879543,0,
0.239768622386736,0.0843623725727071,0,
0.242503139189583,0.120146158286567,0,
0.243392824199432,0.155727607610228,0,
0.243339264566732,0.213786249456964,0,
0.239613894558936,0.252087337907722,0,
0.234049643828442,0.283735129763088,0,
0.220183650029457,0.314472407862554,0,
0.211878931425816,0.316787374209251,0,
0.195272469753685,0.31819182680005,0,
0.187893142581693,0.31738248123925,0,
0.176824151823705,0.316168462898052,0,
0.171298583050161,0.305885013419663,0,
0.162101203901521,0.275844010545296,0,
0.158411540315525,0.275439337764897,0,
0.14486987984789,-0.04540071531865,0,
0.162434463838321,-0.0854097609455059,0,
0.180906586049501,-0.109190237864279,0,
0.195668215928634,-0.110797026845278,0,
0.219648053702458,-0.104941173670084,0,
0.239911448073936,-0.0704606723519226,0,
0.25463142046097,-0.0269107398965705,0,
0.264739313365508,0.0161333515832823,0,
0.270205371436052,0.0909264031136001,0,
0.271077203235001,0.145860733052839,0,
0.270071472354303,0.23607300773044,0,
0.265387980028208,0.312978689217255,0,
0.250575766051524,0.369418639942393,0,
0.233014157596243,0.406202205466653,0,
0.218231698971059,0.430387355165826,0,
0.201625237298928,0.431791807756625,0,
0.183176919368948,0.429768443854627,0,
0.160137350702523,0.404660878258954,0,
0.146336818676839,0.364437594101299,0,
0.132548188791754,0.311312389533257,0,
0.121550610877366,0.232686848729744,0,
0.121589292834316,0.19075560739599,0,
0.121648803537316,0.126246005344061,0,
0.121693436564566,0.0778638038051143,0,
0.126341222468861,0.0396638835494562,0,
0.14486987984789,-0.04540071531865,0,
0.749736665139225,0.279004028874593,0,
0.749790224771925,0.220945387027857,0,
0.752584252277772,0.192219570689788,0,
0.760918726232913,0.157649803317126,0,
0.771098031981052,0.123282372334664,0,
0.789579080797681,0.0898254551081012,0,
0.806185542469813,0.0884210025173029,0,
0.823690615757244,0.112921558942375,0,
0.83565524259538,0.143266066402042,0,
0.842986961204972,0.195683093604384,0,
0.84479013550587,0.241042151430934,0,
0.84472467373257,0.312002713688056,0,
0.83637234656653,0.365925361676297,0,
0.829894606544987,0.387795545028773,0,
0.815109172384653,0.415206174830543,0,
0.800347542505519,0.416812963811541,0,
0.785588888161535,0.415194272689943,0,
0.770848087028452,0.394222700952766,0,
0.76348958860251,0.370834994673792,0,
0.756137041246868,0.340996328189625,0,
0.749736665139225,0.279004028874593,0,
0.788754857561132,-0.0167165564726815,0,
0.811815254973607,-0.0141873515951843,0,
0.837625046864678,0.00799823848319114,0,
0.856016829626808,0.0713057243345214,0,
0.862443985550801,0.104268702726185,0,
0.871617560418241,0.160113546421324,0,
0.875247713301237,0.225027821253652,0,
0.874274713307188,0.279759814802692,0,
0.874209251533888,0.350720377059814,0,
0.865859899902997,0.401417544945458,0,
0.852895493254461,0.454834351958199,0,
0.834405517832382,0.497967709492552,0,
0.818706594380999,0.515600730791433,0,
0.796562661794723,0.519623654314228,0,
0.775353047245547,0.510845825621738,0,
0.759680903610514,0.49944952599725,0,
0.748641668204026,0.465980706630087,0,
0.740372656022185,0.429589911745627,0,
0.730267738652796,0.383320340163178,0,
0.724777876301052,0.334331129453632,0,
0.723906044502103,0.279396799514392,0,
0.723950677529353,0.231014597975445,0,
0.7267625582461,0.182935901021798,0,
0.731422246290995,0.131834060355755,0,
0.737917839523438,0.0906109963877004,0,
0.74532989758208,0.0559400608199384,0,
0.753658420466921,0.0278212536524693,0,
0.765670655867457,0.00655807947059272,0,
0.777676940197694,-0.0082541345060908,0,
0.786907050232984,-0.0136934127602849,0 ,

// door outer
0.342379511655171, 0.689967855115242, 0,
0.342379511655171, 0.688657855115242, 0,
0.342606092705773, 0.60854454673673, 0,
0.342635848057273, 0.576289745710766, 0,
0.342680481084523, 0.527907544171819, 0,
0.343674309824622, 0.450597189904604, 0,
0.346495117146818, 0.392842052643167, 0,
0.346557603384968, 0.325106970488642, 0,
0.347524652308717, 0.276825937144795, 0,
0.352190291423912, 0.219273136273558, 0,
0.368808655236644, 0.204966763272374, 0,
0.396487083201913, 0.201550848920178, 0,
0.418628040253039, 0.200753405499979, 0,
0.449061813767206, 0.210542916143468, 0,
0.489642162142861, 0.221445276933056, 0,
0.520078911192178, 0.228009307473949, 0,
0.545900605223849, 0.237292977141938, 0,
0.549545635782595, 0.286079851461285, 0,
0.546718877390098, 0.350285948927914, 0,
0.545742901860899, 0.40824342257955, 0,
0.544772877402, 0.459749936025994, 0,
0.542895314722353, 0.495027880764355, 0,
0.541919339193153, 0.552985354415991, 0,
0.541874706165904, 0.601367555954938, 0,
0.541833048673804, 0.646524277391288, 0,
0.543639198509852, 0.708657855115242, 0 ,


// door lock
0.489273195784261, 0.621404809655016, 0,
0.4994167951106, 0.625743139903711, 0,
0.505870730850943, 0.629676797372007, 0,
0.516020281247582, 0.627564167415509, 0,
0.522486119128525, 0.618595904473419, 0,
0.516963525890131, 0.605086974892434, 0,
0.514196278200634, 0.604783470307134, 0,
0.503127287442646, 0.603569451965936, 0,
0.495747960270654, 0.602760106405137, 0,
0.49021346489166, 0.602153097234537, 0,
0.489273195784261, 0.621404809655016, 0,


0.587495353327018, 0.779967855115242, 0,
0.587522334008849, 0.594120609643495, 0,
0.587528329715923, 0.587585288933123, 0,
0.587546316837144, 0.567979326802009, 0,
0.584827263679205, 0.531747268955427, 0,
0.584836257239816, 0.52194428788987, 0,
0.584854244361037, 0.502338325758756, 0,
0.583966879714124, 0.46956579089372, 0,
0.584002853956567, 0.430353866631491, 0,
0.584011847517177, 0.420550885565934, 0,
0.583121485016728, 0.391046011056083, 0,
0.58314846569856, 0.361637067859412, 0,
0.583166452819781, 0.342031105728298, 0,
0.583184439941002, 0.322425143597184, 0,
0.583196431355149, 0.309354502176441, 0,
0.583214418476371, 0.289748540045327, 0,
0.583238401304666, 0.263607257203841, 0,
0.584167735901094, 0.250632547096278, 0,
0.584179727315242, 0.237561905675536, 0,
0.587861091458515, 0.224874989507512, 0,
0.59245080522346, 0.222086985718225, 0,
0.603464919117911, 0.216702840766011, 0,
0.607134291847037, 0.21708656601873, 0,
0.61722806470567, 0.214874150108522, 0,
0.626401496528485, 0.215833463240319, 0,
0.633740241986737, 0.216600913745757, 0,
0.648417732903241, 0.218135814756634, 0,
0.6603431942729, 0.219382921827971, 0,
0.669522621802789, 0.213806914249397, 0,
0.679613396807885, 0.214862158694374, 0,
0.684197114865756, 0.218609475615459, 0,
0.685099468780353, 0.235043708704567, 0,
0.685084479512669, 0.251382010480495, 0,
0.685971844159581, 0.284154545345532, 0,
0.685932872063602, 0.326634129962946, 0,
0.685911887088844, 0.349507752449246, 0,
0.685908889235307, 0.352775412804432, 0,
0.684050220042449, 0.378724833019557, 0,
0.684023239360617, 0.408133776216229, 0,
0.684925593275215, 0.424568009305337, 0,
0.686718309690261, 0.470507116904296, 0,
0.68670032256904, 0.49011307903541, 0,
0.686682335447819, 0.509719041166524, 0,
0.68942836928759, 0.516542155816435, 0,
0.690336718909261, 0.526441068195172, 0,
0.691221085702637, 0.562481263415394, 0,
0.693043780653052, 0.575743767462496, 0,
0.694848488482246, 0.608612233640713, 0,
0.696671183432662, 0.621874737687815, 0,
0.698493878383077, 0.635137241734917, 0,
0.701227920808701, 0.655030997805571, 0,
0.703967958941398, 0.668389433165853, 0,
0.707619344549302, 0.979967855115242, 0,

0.285694942421226, 0.0859774401528504, 0,
0.706126413487942, 0.149007310765491, 0,
0.704577522493894, 0.17063182761143, 0,
0.703795582363028, 0.189613236922363, 0,
0.703016140443442, 0.205871595937308, 0,
0.701469747660675, 0.224773062487258, 0,
0.701449761970429, 0.246557464855163, 0,
0.701429776280183, 0.268341867223068, 0,
0.70141978343506, 0.27923406840702, 0,
0.28864532994376, 0.20338837392427, 0,
0.288657821000163, 0.189773122444329, 0,
0.288672810267848, 0.173434820668401, 0,
0.28868030490169, 0.165265669780437, 0,
0.288710283437059, 0.13258906622858, 0,
0.288725272704743, 0.116250764452651, 0,
0.283396588042961, 0.0911837124618772, 0,
0.287925845094912, 0.154293525835501, 0,
0.287973311109245, 0.102555570211728, 0,
0.288755251240112, 0.0835741609007949, 0,
0.392715815476119, 0.0998924769864776, 0,
0.453872027628218, 0.106287897865128, 0,
0.505852309746221, 0.114447055907969, 0,
0.548661658252691, 0.118923850523025, 0,
0.591468508547879, 0.126123695434069, 0,
0.634277857054349, 0.130600490049124, 0,
0.669437682619244, 0.139723957646325, 0,
0.294750958313847, 0.214920117196087, 0,
0.33985366477602, 0.219636740094092, 0,
0.377311844719181, 0.223553935382266, 0,
0.413236122935977, 0.232757345740449, 0,
0.465978359494602, 0.243719496840262, 0,
0.511840522186114, 0.253962163091226, 0,
0.554644874270022, 0.263885058298258, 0,
0.592100556001902, 0.27052530388242, 0,
0.624962027188533, 0.284855043788647, 0,
0.657835989431567, 0.285569532214934, 0,
0.686120737551913, 0.28852741437131, 0,
0.701407292378657, 0.29284931988696, 0,
0.333855459491004, 0.091013834094788, 0,
0.304049300700698, 0.0797269155284815, 0,
0.36749637259722, 0.0890852149860699, 0,
0.314624229051998, 0.219721679277636, 0,
0.35820052842165, 0.221555366357687, 0,
0.398714020761135, 0.228515382985782, 0,
0.444573685241367, 0.241481099532734, 0,
0.490433349721599, 0.254446816079686, 0,
0.536295512413112, 0.264689482330651, 0,
0.572991737915652, 0.265803684561853, 0,
0.608913517921168, 0.277730145216025, 0,
0.644832799715404, 0.292379656166184, 0,
0.673886996910212, 0.289971380491568, 0,

0.188487043277013, 0.209254174011407, 0,
0.185591454481554, 0.209581763531385, 0,
0.186032400338394, 0.21120386599491, 0,
0.184708117043752, 0.207913397895995, 0,
0.185431730880689, 0.206211352671487, 0,
0.184268616911032, 0.20471545614081, 0,
0.18294577934051, 0.199849148750235, 0,
0.18250483348367, 0.19822704628671, 0,
0.18162583321823, 0.19183116277634, 0,
0.18162583321823, 0.19183116277634, 0,
0.182388909540768, 0.189553279851626, 0,
0.181634507562955, 0.182376127026382, 0,
0.18208412776452, 0.174543193739948, 0,
0.182406397019733, 0.170491927779709, 0,
0.182089910661003, 0.168239836573309, 0,
0.182411393442295, 0.165045827187733, 0,
0.182416389864856, 0.159599726595757, 0,
0.182100030729849, 0.157208961531691, 0,
0.183193333573161, 0.1460644178768, 0,
0.184326445875864, 0.141681884474419, 0,
0.185501680796549, 0.129965944383821, 0,
0.187440535632043, 0.123095655177559, 0,
0.190100668014294, 0.117069877042111, 0,
0.189336435112459, 0.116750406708796, 0,
0.191634789490724, 0.111544134399769, 0,
0.193203191977507, 0.111090362078529, 0,
0.196302824492478, 0.108262525698266, 0,
0.195462049172792, 0.106497747612709, 0,
0.200048765084199, 0.106977404178608, 0,
0.200726740302091, 0.108725157416918, 0,
0.203106575691804, 0.10729717522254, 0,
0.203823481368821, 0.109048999619975, 0,
0.206032547825386, 0.112431994062621, 0,
0.206917330987309, 0.112524520406351, 0,
0.205392439013666, 0.115706154393454, 0,
0.209212204061891, 0.118828918494357, 0,
0.20911772309915, 0.125362550598956, 0,
0.209555777507749, 0.1301363316458, 0,
0.21131811521099, 0.13820058079156, 0,
0.212252527190531, 0.138210041610206, 0,
0.21175761534371, 0.141398522546745, 0,
0.211483078116068, 0.1435761994412, 0,
0.212630832712666, 0.154097763223753, 0,
0.212999492363467, 0.157351336443106, 0,
0.212994495940906, 0.162797437035082, 0,
0.212612038299096, 0.17458367401533, 0,
0.21297451025066, 0.184581839402987, 0,
0.212969513828099, 0.190027939994963, 0,
0.211430615679173, 0.200760255656949, 0,
0.210374057360115, 0.20271746540588, 0,
0.209132261300908, 0.205966527965976, 0,
0.209927328606791, 0.207398720108994, 0,
0.209927328606791, 0.207398720108994, 0,
0.209041099720748, 0.208882033056923, 0,
0.20726719622454, 0.213424498244441, 0,
0.204535552544378, 0.216379072584029, 0,
0.205493292728332, 0.21796696343196, 0,
0.205493292728332, 0.21796696343196, 0,
0.202396551661602, 0.217643121228903, 0,
0.199943840210409, 0.221345516610107, 0,
0.200178810860313, 0.223715162536216, 0,
0.197082069793583, 0.223391320333159, 0,
0.194870111888776, 0.223160004473833, 0,
0.195357124299001, 0.220865860044208, 0,
0.191774816546167, 0.221260322979117, 0,
0.189565750089602, 0.217877328536471, 0,
0.189124804232762, 0.216255226072946, 0,
0.190775404810155, 0.214940102886333, 0,
0.187356683633037, 0.214494334093825, 0,
0.188487043277013, 0.209254174011407, 0,


0.783697643320716, 0.280008768351489, 0,
0.782815751607035, 0.276764563424439, 0,
0.782820088779397, 0.27203704554946, 0,
0.782379142922556, 0.270414943085935, 0,
0.78370631766544, 0.270553732601531, 0,
0.781500142657117, 0.264019059575565, 0,
0.782830208848242, 0.261006170507842, 0,
0.783274046153325, 0.259476594388047, 0,
0.782833100296484, 0.257854491924522, 0,
0.7815059255536, 0.257715702408926, 0,
0.781508817001841, 0.254564023825607, 0,
0.782402274508489, 0.245201514419379, 0,
0.782402274508489, 0.245201514419379, 0,
0.781521828518928, 0.240381470200669, 0,
0.782409503129093, 0.23732231796108, 0,
0.782853340434175, 0.235792741841285, 0,
0.782857677606537, 0.231065223966306, 0,
0.781974340168735, 0.229396858330916, 0,
0.784634472550987, 0.223371080195468, 0,
0.785076864131948, 0.223417343367333, 0,
0.783308743532223, 0.221656451388213, 0,
0.785967430190354, 0.217206512544425, 0,
0.788185170991644, 0.211134471237112, 0,
0.786859441972881, 0.209419842429856, 0,
0.788631899744968, 0.206453216533998, 0,
0.790843857649775, 0.206684532393324, 0,
0.789077182774171, 0.203347801122544, 0,
0.792619206870103, 0.200566227914146, 0,
0.792620652594224, 0.198990388622486, 0,
0.793947827337108, 0.199129178138082, 0,
0.794388773193949, 0.200751280601607, 0,
0.79792790584164, 0.201121385976529, 0,
0.79792935156576, 0.199545546684869, 0,
0.799698917889606, 0.19973059937233, 0,
0.800583701051529, 0.199823125716061, 0,
0.802353267375374, 0.200008178403522, 0,
0.804121387975099, 0.201769070382642, 0,
0.805007616861142, 0.200285757434713, 0,
0.807216683317708, 0.203668751877359, 0,
0.806771400288504, 0.206774167288813, 0,
0.809425749774273, 0.207051746320005, 0,
0.811189533201635, 0.213540156174105, 0,
0.811188087477514, 0.215115995465764, 0,
0.811183750305152, 0.219843513340743, 0,
0.811183750305152, 0.219843513340743, 0,
0.813385588141113, 0.231105704241688, 0,
0.812055521949987, 0.234118593309412, 0,
0.813823642549712, 0.235879485288533, 0,
0.813810631032625, 0.250062038913471, 0,
0.813809185308504, 0.25163787820513, 0,
0.813807739584383, 0.25321371749679, 0,
0.813796173791417, 0.265820431830068, 0,
0.813350890762214, 0.268925847241523, 0,
0.813791836619055, 0.270547949705048, 0,
0.813786053722572, 0.276851306871687, 0,
0.812455987531446, 0.27986419593941, 0,
0.810239692454277, 0.284360397955063, 0,
0.811563975748919, 0.287650866053979, 0,
0.808462897509827, 0.292054541725901, 0,
0.807132831318702, 0.295067430793625, 0,
0.806688994013619, 0.29659700691342, 0,
0.803145524193566, 0.300954419413477, 0,
0.803145524193566, 0.300954419413477, 0,
0.8013745121456, 0.302345206017676, 0,
0.798718716935711, 0.303643466278144, 0,
0.797390096468706, 0.305080516054208, 0,
0.796064367449943, 0.303365887246953, 0,
0.793852409545136, 0.303134571387627, 0,
0.792523789078131, 0.30457162116369, 0,
0.791199505783489, 0.301281153064775, 0,
0.787663264584039, 0.297759369106534, 0,
0.788550939194203, 0.294700216866945, 0,
0.787667601756402, 0.293031851231554, 0,
0.785900926880798, 0.289695119960774, 0,
0.785900926880798, 0.289695119960774, 0,
0.783697643320716, 0.280008768351489, 0,





};
    float window1[] = { 0.344935800047859,0.586120879204563,0,
0.344935800047859,0.586120879204563,0,
0.351324601800082,0.586212409315626,0,
0.357713403552305,0.58630393942669,0,
0.366758104027217,0.583117166059833,0,
0.37314690577944,0.583208696170897,0,
0.383788806692408,0.580044805331806,0,
0.392839609174724,0.580174472989146,0,
0.401358011511022,0.58029651313723,0,
0.410941214139356,0.580433808303826,0,
0.41998896561797,0.578905255449067,0,
0.432769620126119,0.580746536183292,0,
0.439690822024361,0.580845693803611,0,
0.452468425528807,0.581028754025738,0,
0.463116428449179,0.581181304210843,0,
0.472699631077513,0.581318599377438,0,
0.488145337319457,0.584856238170037,0,
0.502523192265661,0.586720401432028,0,
0.512109445897698,0.588515917110721,0,
0.522760499821772,0.590326687807925,0,
0.53127890215807,0.590448727956009,0,
0.538729453198628,0.588897292573485,0,
0.541397555936125,0.592251871143958,0,
0.545157917998979,0.610545689341823,0,
0.54893048407664,0.63547238958808,0,
0.551635198858563,0.658725614303729,0,
0.554333811633081,0.678662397995182,0,
0.558109428714445,0.705247318753538,0,
0.560820245503772,0.731816984493383,0,
0.562989509135974,0.753404361187678,0,
0.564608066599944,0.76503478730013,0,
0.565183180797793,0.788257501978758,0,
0.566816993280274,0.8081790306517,0,
0.566853605324699,0.828077676796877,0,
0.566887166365422,0.846318102429955,0,
0.563698867496715,0.84958877839862,0,
0.555709814302734,0.847816145247692,0,
0.547723812112455,0.847701732608863,0,
0.540270210068195,0.847594947479289,0,
0.532816608023934,0.847488162349715,0,
0.525359954975972,0.845723156708043,0,
0.517906352931711,0.845616371578469,0,
0.509387950595414,0.845494331430385,0,
0.500337148113098,0.845364663773045,0,
0.494468542492085,0.838647879122845,0,
0.481681785976532,0.833490157364424,0,
0.473148128621724,0.825077014655849,0,
0.46620862070127,0.815028533962942,0,
0.461940266522014,0.809992852352606,0,
0.453935958309523,0.799929116641189,0,
0.448593650827124,0.789903518476048,0,
0.438453640023154,0.776492831703413,0,
0.428839927357798,0.759773331415838,0,
0.418690763542722,0.741387983106909,0,
0.412819106918006,0.733012977944611,0,
0.408006148577924,0.721336786776627,0,
0.402134491953209,0.712961781614329,0,
0.390385076696375,0.692895330265536,0,
0.38556906735259,0.679560918585454,0,
0.379688257716769,0.666211251886862,0,
0.371142396347152,0.651165227129895,0,
0.362070236838922,0.639428015887869,0,
0.355650925049677,0.622754280655825,0,
0.354047622604217,0.619414957103863,0,
0.349770115413856,0.609404613957233,0,
0.348166812968396,0.606065290405271,0,
0.346028059373215,0.601060118831956,0,
    };
    float eye[] = {
0.13488372093023254, 0.7164597897940743,0,
0.11472868217054263, 0.6995577115137681,0,
0.11627906976744186, 0.7118300280591621,0,
0.11937984496124031, 0.7241047224996433,0,
0.1255813953488372, 0.7302492034051458,0,
0.13798449612403102, 0.7364031958909973,0,
0.15193798449612403, 0.7364245969467828,0,
0.15503875968992248, 0.7318281257430923,0,
0.1565891472868217, 0.7241617919817378,0,
0.1565891472868217, 0.7195605649878728,0,
0.15193798449612403, 0.7134184619774576,0,
0.13953488372093023, 0.7041969848290295,0,
0.13333333333333333, 0.7011199885861037,0,
0.1255813953488372, 0.6995743567793788,0

    };
    float spot2[] = {
0.145736434108527,0.701139011746801,0,
0.201550387596899,0.734966947258286,0,
0.221705426356589,0.756470252532458,0,
0.232558139534883,0.774891805773529,0,
0.220155038759689,0.773339040281542,0,
0.201550387596899,0.765641793884053,0,
0.187596899224806,0.75488419650925,0,
0.176744186046511,0.748732581918485,0,
0.170542635658914,0.748723070338136,0,
0.168992248062015,0.748720692443049,0,
0.15968992248062,0.748706425072525,0,
0.147286821705426,0.748687401911827,0,
0.131782945736434,0.748663622960955,0,
0.11937984496124,0.74557711513768,0,
0.108527131782945,0.736358015884339,0,
0.102325581395348,0.72714605031626,0,
0.0976744186046511,0.717936462643268,0,
0.0945736434108527,0.710262995196651,0,
0.0868217054263565,0.70564987872735,0,
0.0806201550387596,0.699505397821848,0,
0.0775193798449612,0.694899415037808,0,
0.0744186046511627,0.68875968992248,0,
0.0651162790697674,0.67647548390165,0,
0.0604651162790697,0.670333380891235,0,
0.0573643410852713,0.664193655775907,0,
0.041860465116279,0.645764968849574,0,
0.0403100775193798,0.644228848623198,0,
0.0387596899224806,0.639625243734246,0,
0.0325581395348837,0.630413278166167,0,
0.0310077519379844,0.624275930945926,0,
0.0310077519379844,0.619674703952061,0,
0.0341085271317829,0.618145717410947,0,
0.0403100775193798,0.613554001997431,0,
0.0465116279069767,0.613563513577781,0,
0.0480620155038759,0.613565891472868,0,
0.0542635658914728,0.613575403053217,0,
0.0682170542635658,0.610529319446426,0,
0.0713178294573643,0.609000332905312,0,
0.0821705426356589,0.607483235839634,0,
0.0914728682170542,0.607497503210158,0,
0.100775193798449,0.60904551291197,0,
0.113178294573643,0.610598278403956,0,
0.128682170542635,0.612155799686117,0,
0.134883720930232,0.612165311266466,0,
0.145736434108527,0.612181956532077,0,
0.155038759689922,0.613729966233889,0,
0.15813953488372,0.613734722024064,0,
0.175193798449612,0.613760878870024,0,
0.182945736434108,0.61377276834546,0,
0.184496124031007,0.613775146240548,0,
0.201550387596899,0.616868787749084,0,
0.204651162790697,0.616873543539259,0,
0.207751937984496,0.606142103010415,0,
0.209302325581395,0.603076996242925,0,
0.213953488372093,0.601550387596899,0,
0.213953488372093,0.601550387596899,0,
0.226356589147286,0.592366956769867,0,
0.23875968992248,0.583183525942835,0,
0.244961240310077,0.583193037523184,0,
0.248062015503876,0.580130308650782,0,
0.288372093023255,0.555652256622437,0,
0.296124031007752,0.555664146097874,0,
0.302325581395348,0.560274884672088,0,
0.316279069767441,0.577167451372045,0,
0.322480620155038,0.594048128596566,0,
0.327131782945736,0.610926427925999,0,
0.334883720930232,0.630876967708184,0,
0.337984496124031,0.641617919817377,0,
0.337984496124031,0.649286631473819,0,
0.334883720930232,0.661551814333951,0,
0.328682170542635,0.667677272078755,0,
0.320930232558139,0.675334094259761,0,
0.310077519379844,0.679918675988015,0,
0.294573643410852,0.681428639368431,0,
0.282170542635658,0.682943358539021,0,
0.271317829457364,0.687527940267275,0,
0.257364341085271,0.690574023874066,0,
0.244961240310077,0.696689970038522,0,
0.23875968992248,0.698214200789461,0,
0.23875968992248,0.699747943120749,0,
0.229457364341085,0.701267418081514,0,
0.220155038759689,0.705854377704855,0,
0.210852713178294,0.710441337328197,0,
0.204651162790697,0.719634279735578,0,
0.201550387596899,0.727298235601845,0,
0.201550387596899,0.733433204926998,0,
0.2015503875968992, 0.748770628239882,0,
0.21395348837209302, 0.7365197127502735,0,
0.2201550387596899, 0.7365292243306225,0,
0.2294573643410853, 0.7304085223759929,0,
0.23875968992248064, 0.7273553050839398,0



    };

    float spot3[] = {
        0.493023255813953,0.597377181718742,0,
0.424806201550387,0.623346173966804,0,
0.368992248062015,0.563444618823417,0,
0.386046511627907,0.540464640700052,0,
0.417054263565891,0.51903980596376,0,
0.434108527131782,0.489924858515242,0,
0.449612403100775,0.473077471821943,0,
0.465116279069767,0.466966281447662,0,
0.496124031007751,0.460878870024254,0,
0.51937984496124,0.460914538450563,0,
0.548837209302325,0.467094687782375,0,
0.572093023255813,0.493203975840585,0,
0.57984496124031,0.5223569696105,0,
0.57984496124031,0.559166785561421,0,
0.573643410852713,0.602102059257145,0,
0.568992248062015,0.615898606553478,0,
0.556589147286821,0.629683264374375,0,
0.555038759689922,0.657288248442478,0,
0.534883720930232,0.690999667094687,0,
0.528682170542635,0.694057640176915,0,
0.496124031007751,0.695541446711371,0,
0.474418604651162,0.686305702192419,0,
0.462015503875969,0.675550482712702,0,
0.444961240310077,0.650984448566129,0,
0.434108527131782,0.634096637656346,0,
0.424806201550387,0.623346173966804,0,
0.412403100775193,0.614124696818376,0,
0.393798449612403,0.607961192752175,0,
0.37829457364341,0.589532505825842,0,
0.368992248062015,0.581849526798877,0,
0.364341085271317,0.566504969800732,0,
0.365891472868217,0.561906120701954,0

    };
    float shoe[] = {
0.289922480620155,0.190623959670899,0,
0.283720930232558,0.166074570789936,0,
0.341085271317829,0.1615613259143,0,
0.344186046511627,0.192240928330242,0,
0.344186046511627,0.160032339373186,0,
0.282170542635658,0.166072192894849,0,
0.291472868217054,0.190626337565986,0,
0.344186046511627,0.190707185998953,0,
0.314728682170542,0.159987159366528,0,
0.368992248062015,0.192278974651638,0,
0.424806201550387,0.189297094212203,0,
0.3984496124031,0.161649308032529,0,
0.370542635658914,0.190747610215437,0,
0.368992248062015,0.163137870357159,0,
0.432558139534883,0.158634137061872,0,
0.426356589147286,0.18929947210729,0,
0.432558139534883,0.158634137061872,0,
0.370542635658914,0.16007276358967,0,
0.787596899224806,0.203657202644219,0,
0.786046511627907,0.172979978123365,0,
0.843410852713178,0.173067960241594,0,
0.844961240310077,0.197610215437294,0,
0.843410852713178,0.171534217910305,0,
0.787596899224806,0.171448613687164,0,
0.789147286821705,0.202125838208018,0,
0.843410852713178,0.197607837542207,0,
0.815503875968992,0.171491415798735,0,
0.860465116279069,0.206836448375897,0,
0.863565891472868,0.174632615209017,0,
0.916279069767441,0.176247205973272,0,
0.917829457364341,0.200789461168973,0,
0.917829457364341,0.176249583868359,0,
0.865116279069767,0.173101250772816,0,
0.862015503875968,0.206838826270985,0,
0.914728682170542,0.200784705378798,0,
0.893023255813953,0.173144052884386,0,
0.958139534883721,0.441648832453512,0,
0.951937984496124,0.404829504922242,0,
0.976744186046511,0.443211109525847,0,
0.976744186046511,0.443211109525847,0,
0.951937984496124,0.406363247253531,0,
1.00155038759689,0.417175536215342,0,
0.951937984496124,0.409430731916107,0,
0.996899224806201,0.420235887192657,0,
1.00620155038759,0.384974080943548,0,
0.951937984496124,0.409430731916107,0,
0.981395348837209,0.380334807628287,0,
0.9984496124031,0.418704522756456,0,
0.976744186046511,0.381861416274314,0,
1.00620155038759,0.395710277262567,0,
1.00310077519379,0.363496932515337,0,
0.951937984496124, 0.4094307319161079,0,
0.9643410852713179, 0.37110619679459744,0,
1.006201550387597, 0.3757716269558188,0,
0.9643410852713179, 0.3741736814571741,0,
1.0077519379844961, 0.38497645883863596,0,
1.0015503875968994, 0.35889332762638515,0,
0.9705426356589146, 0.3849193893565416,0,
1.0015503875968994, 0.40643933989632386,0,
1.0015503875968994, 0.3619608122889618,0,
0.08992248062015502, 0.8099491130451325,0,
0.09302325581395349, 0.7808127645408285,0,
0.11007751937984496, 0.7915751177058069,0,
0.09302325581395349, 0.7808127645408285,0,
0.10852713178294572, 0.7946402244732963,0,
0.10697674418604651, 0.7639629999524421,0,
0.09147286821705426, 0.7808103866457412,0,
0.10852713178294572, 0.7915727398107196,0,
0.12713178294573643, 0.7793313359014601,0,
0.10852713178294572, 0.762431635516241,0,
0.12713178294573643, 0.7777975935701718,0,
0.10077519379844961, 0.7869596233414182,0,
0.13953488372093023, 0.8253626290008085,0,
0.13798449612403102, 0.7962191468112427,0,
0.15813953488372093, 0.8039187711038189,0,
0.13798449612403102, 0.7977528891425311,0,
0.15813953488372093, 0.8039187711038189,0,
0.1829457364341085, 0.7916868787749085,0,
0.1829457364341085, 0.7916868787749085,0,
0.15193798449612403, 0.7793693822228565,0,
0.15968992248062017, 0.8023874066676179,0,
0.13798449612403102, 0.7992866314738194,0,
0.15348837209302324, 0.8100466067437104,0,
0.15193798449612403, 0.7793693822228565,0,
0.0031007751937984496, 0.6395705521472392,0,
0.027906976744186046, 0.6610809911066724,0,
0.015503875968992248, 0.6027797593570172,0

    };

    float spot5[] = {
        0.3162790697674418, 0.6017073286726591,0,
0.23875968992248064, 0.6537356731820994,0,
0.21705426356589147, 0.624561278356399,0,
0.20620155038759688, 0.5908023018024445,0,
0.21550387596899223, 0.5555404955533363,0,
0.23410852713178296, 0.4988205640367148,0,
0.24186046511627907, 0.475826318542826,0,
0.24496124031007752, 0.4558924240262521,0,
0.2837209302325582, 0.47435677937889387,0,
0.3162790697674418, 0.4606030341941313,0,
0.35038759689922483, 0.45298663622960955,0,
0.38139534883720927, 0.4607029057877966,0,
0.4, 0.4760688638417274,0,
0.42170542635658914, 0.5021757740048509,0,
0.42015503875968996, 0.5573881200361441,0,
0.4, 0.6079707043325249,0,
0.38139534883720927, 0.6309483045608029,0,
0.3658914728682171, 0.656998145241832,0,
0.35968992248062015, 0.6692585723117896,0,
0.35038759689922483, 0.6753792742664194,0,
0.32558139534883723, 0.6799424549388882,0,
0.2945736434108527, 0.6875636086935845,0,
0.2930232558139535, 0.6875612307984973,0,
0.26201550387596906, 0.6813787035715985,0,
0.2573643410852713, 0.6660341465734532,0,
0.22480620155038758, 0.6383768488134304,0


    };

    unsigned int VBO, VAO;
    glGenVertexArrays(1, &VAO);
    glGenBuffers(1, &VBO);
    // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).
    glBindVertexArray(VAO);

    glBindBuffer(GL_ARRAY_BUFFER, VBO);
    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);

    // note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute's bound vertex buffer object so afterwards we can safely unbind
    glBindBuffer(GL_ARRAY_BUFFER, 0);

    // You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other
    // VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary.
    glBindVertexArray(0);


    // uncomment this call to draw in wireframe polygons.
    //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);

    // render loop
    // -----------
    while (!glfwWindowShouldClose(window))
    {
        // input
        // -----
        processInput(window);

        // render
        // ------
        glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);

        // create transformations
        /*glm::mat4 trans = glm::mat4(1.0f); // make sure to initialize matrix to identity matrix first
        trans = glm::translate(trans, glm::vec3(translate_X, translate_Y, 0.0f));
        trans = glm::rotate(trans, glm:: radians(rotateAngle), glm::vec3(0.0f, 0.0f, 1.0f));
        trans = glm::scale(trans,glm::vec3(scale_X, scale_Y, 1.0));*/
        glm::mat4 translationMatrix;
        glm::mat4 rotationMatrix;
        glm::mat4 scaleMatrix;
        glm::mat4 modelMatrix;
        glm::mat4 identityMatrix = glm::mat4(1.0f);
        translationMatrix = glm::translate(identityMatrix, glm::vec3(-0.6, -0.6, 0.0f));
        rotationMatrix = glm::rotate(identityMatrix, glm::radians(rotateAngle), glm::vec3(0.0f, 0.0f, 1.0f));
        scaleMatrix = glm::scale(identityMatrix, glm::vec3(1.2, .7, 1.0f));
        modelMatrix = translationMatrix * rotationMatrix * scaleMatrix;
        //modelMatrix = rotationMatrix * scaleMatrix;

        // get matrix's uniform location and set matrix
        glUseProgram(shaderProgram);
        unsigned int transformLoc = glGetUniformLocation(shaderProgram, "transform");
        glUniformMatrix4fv(transformLoc, 1, GL_FALSE, glm::value_ptr(modelMatrix));

        int colorLocation = glGetUniformLocation(shaderProgram, "colorInfo"); 
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));

        // draw our first triangle
        glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized
        //glDrawArrays(GL_LINES, 0, 6);
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));
        glDrawArrays(GL_LINE_STRIP, 0, 185); // outer line
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.07, 0.25, 0.82, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 0, 185); // outer line
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(1.0, 0.0, 0.0, 0.7)));
        glDrawArrays(GL_TRIANGLE_FAN, 186, 20); // headlight 1 
        
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 338, 25); //tire 1 outer 
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(.9, .9, .9, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 310, 27); //tire 1 inner
        
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 384, 30); //tire 1 outer 
        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(.9, .9, .9, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 364, 20); //tire 2 inner

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(1.0, 0.0, 0.0, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 277, 13); //headlight back 

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.04, 0.13, 0.18, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 247, 29); //window 2 

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.04, 0.13, 0.18, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 291, 18); //window 3

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.04, 0.13, 0.18, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 207, 39); //window 1 

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));
        glDrawArrays(GL_LINE_STRIP, 415, 24); // door outer line

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.04, 0.13, 0.18, 1.0)));
        glDrawArrays(GL_TRIANGLE_FAN, 440, 10); // door lock

        //glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.0, 1.0)));
        //glDrawArrays(GL_LINE_STRIP, 451, 50); // door outer line

        //glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.07, 0.25, 0.82, 1.0)));
        //glDrawArrays(GL_LINES, 504, 50); //window 1 

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.1, .5)));
        glDrawArrays(GL_TRIANGLE_FAN, 559, 65); //inner chaka 2 

        glUniform4fv(colorLocation, 1, glm::value_ptr(glm::vec4(0.0, 0.0, 0.1, .5)));
        glDrawArrays(GL_TRIANGLE_FAN, 625, 76); //inner chaka 2 



        // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)
        // -------------------------------------------------------------------------------
        glfwSwapBuffers(window);
        glfwPollEvents();
    }

    // optional: de-allocate all resources once they've outlived their purpose:
    // ------------------------------------------------------------------------
    glDeleteVertexArrays(1, &VAO);
    glDeleteBuffers(1, &VBO);
    glDeleteProgram(shaderProgram);

    // glfw: terminate, clearing all previously allocated GLFW resources.
    // ------------------------------------------------------------------
    glfwTerminate();
    return 0;
}

// process all input: query GLFW whether relevant keys are pressed/released this frame and react accordingly
// ---------------------------------------------------------------------------------------------------------
void processInput(GLFWwindow* window)
{
    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)
        glfwSetWindowShouldClose(window, true);
    if (glfwGetKey(window, GLFW_KEY_R) == GLFW_PRESS)
    {
        rotateAngle += 1;
    }
    if (glfwGetKey(window, GLFW_KEY_T) == GLFW_PRESS)
    {
        rotateAngle -= 1;
    }
    if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS)
    {
        translate_Y += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS)
    {
        translate_Y -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)
    {
        translate_X += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)
    {
        translate_X -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_X) == GLFW_PRESS)
    {
        scale_X += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_C) == GLFW_PRESS)
    {
        scale_X -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_Y) == GLFW_PRESS)
    {
        scale_Y += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_U) == GLFW_PRESS)
    {
        scale_Y -= 0.01;
    }
}

// glfw: whenever the window size changed (by OS or user resize) this callback function executes
// ---------------------------------------------------------------------------------------------
void framebuffer_size_callback(GLFWwindow* window, int width, int height)
{
    // make sure the viewport matches the new window dimensions; note that width and
    // height will be significantly larger than specified on retina displays.
    glViewport(0, 0, width, height);
}
